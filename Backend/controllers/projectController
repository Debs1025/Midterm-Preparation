const projectService = require('../services/projectService');

// Create a new project
const createProject = async (req, res) => {
    try {
        const { id, name, description, createdBy } = req.body;
        const project = await projectService.createProject(id, name, description, createdBy);
        res.status(201).json({ success: true, project });
    } catch (error) {
        res.status(400).json({ success: false, error: error.message });
    }
};

// Get all projects with their tasks
const getAllProjectsWithTasks = async (req, res) => {
    try {
        const projects = await projectService.fetchAllProjectsWithTasks();
        res.json({ success: true, projects }); // includes related tasks
    } catch (error) {
        res.status(500).json({ success: false, error: error.message });
    }
};

// Get a single project by ID
const getProjectById = async (req, res) => {
    try {
        const project = await projectService.getProjectById(req.params.id);
        if (!project) return res.status(404).json({ error: 'Project not found' });
        res.json(project);
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
};

// Update a project
const updateProject = async (req, res) => {
    try {
        const updated = await projectService.updateProject(req.params.id, req.body);
        if (!updated) return res.status(404).json({ error: 'Project not found' });
        res.json(updated);
    } catch (error) {
        res.status(400).json({ error: error.message });
    }
};

// Delete a project
const deleteProject = async (req, res) => {
    try {
        const deleted = await projectService.deleteProject(req.params.id);
        if (!deleted) return res.status(404).json({ error: 'Project not found' });
        res.json({ message: 'Project deleted' });
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
};

module.exports = {
    createProject,
    getAllProjectsWithTasks,
    getProjectById,
    updateProject,
    deleteProject
};